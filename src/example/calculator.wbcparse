
token<void> tAdd, tSub, tMul, tDiv, tEndLine, tLeftBracket, tRightBracket, ntProgram, ntLine, ntLines;
token<float> tNumber, ntExpression, ntEvaluatedExpression;

ntProgram -> ntLines {}
ntExpression -> { $$ = this->expectedExpression(); }
left
ntExpression -> ntExpression tAdd ntExpression { $$ = this->add($1, $3); }
ntExpression -> ntExpression tSub ntExpression { $$ = this->sub($1, $3); }
left
ntExpression -> ntExpression tMul ntExpression { $$ = this->mul($1, $3); }
ntExpression -> ntExpression tDiv ntExpression { $$ = this->div($1, $3); }
noassoc
ntExpression -> tNumber { $$ = $1; }
ntExpression -> tLeftBracket ntExpression tRightBracket { $$ = $2; }
ntLines -> ntLine ntLines { }
ntLines -> {}
ntEvaluatedExpression -> ntExpression  { this->print($1); }
ntLine -> ntEvaluatedExpression tEndLine { }
ntLine -> tEndLine { this->blankLine();}
