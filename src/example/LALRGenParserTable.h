#pragma once

/*
   LALRGenParserTable.h, generated by wbcparse (c) Phillip Voyle 2005 - 2021.
*/

#include <utility>
#include <string>
class CLALRGenParserTable
{
public:
   enum ActionID {aShift, aReduce, aError};
   enum TokenID{
      tAdd = 0,
      tSub = 1,
      tMul = 2,
      tDiv = 3,
      tNumber = 4,
      tLeftBracket = 5,
      tRightBracket = 6,
      tEndLine = 7,
      $ = 8,
      ntProgram = 9,
      ntExpression = 10,
      ntLines = 11,
      ntEvaluatedExpression = 12,
      ntLine = 13
   };
   typedef std::pair<ActionID, unsigned> Action;
private:
   static const unsigned kTerminals = 9;
   static const unsigned kNonterminals = 5;
   static const unsigned kStates = 21;
   static const Action s_actionTable[kStates][kTerminals];
   static const int s_gotoTable[kStates][kNonterminals];
   static const int s_earlyReduce[kStates];
   static const std::string s_tokenNames[kTerminals + kNonterminals];
public:
   static const Action& GetAction(int nStateID, int nTerminalID);
   static int GetGoto(int nStateID, int nNonterminalID);
   static int GetEarlyReduce(int nStateID);
   static std::string GetTokenName(TokenID id);
};

