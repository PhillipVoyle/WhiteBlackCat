$PARSERNAME = "CParser";
$TABLENAME = "CParserTable";
$PARSERHEADER = "parser.h";
$TABLEHEADER = "parserTable.h";
$TABLESOURCE = "parserTable.cpp";

token<void>
	tAssign, tBeginRegexp, tFinishedRegexp, tOn, tOr, tPlus,
	tQMark, tStar, tEOF, tState, tOpen, tClose;
	
	
token<std::string> tIdentifier, tLiteral, tVariableName, tResponse;

token<void>
	ntProgram, ntAssignVariables, ntAssignDefinitions, ntInitStates,
	ntStateAssignment, ntInitOneState, ntEvents, ntEvent;

token<regularExpressionPtr> ntRegexp, tRegexp;


ntProgram -> ntAssignVariables ntAssignDefinitions ntInitStates	{}
ntRegexp -> {$$ = this->regNil();}
noassoc
ntAssignVariables -> ntAssignVariables tVariableName tAssign tLiteral {this->assignVar($2, $4);}
ntAssignVariables -> {}
				
ntAssignDefinitions -> ntAssignDefinitions tIdentifier tAssign tBeginRegexp ntRegexp tFinishedRegexp {this->assignDef($2, $5);}
ntAssignDefinitions -> {}
				
ntInitStates -> ntInitOneState {}
ntInitStates -> ntInitStates ntStateAssignment ntInitOneState {}
				
ntStateAssignment -> tState tAssign tLiteral {this->setState($3);}
				
ntInitOneState -> ntEvents {}
				
ntEvents -> ntEvents ntEvent {}
ntEvents -> {}
				
ntEvent -> tOn tBeginRegexp ntRegexp tFinishedRegexp tResponse {this->addEvent($3, $5);}
ntEvent -> tOn tEOF tResponse {this->addEOFEvent($3);}

left
ntRegexp -> ntRegexp tOr ntRegexp {$$ = this->regOr($1, $3);}

left
ntRegexp -> ntRegexp ntRegexp {$$ = this->regCat($1, $2);}

noassoc
ntRegexp -> ntRegexp tPlus {$$ = this->regPlus($1);}
ntRegexp -> ntRegexp tStar {$$ = this->regStar($1);}
ntRegexp -> ntRegexp tQMark {$$ = this->regQMark($1);}

noassoc				
ntRegexp -> tRegexp	{$$ = $1;}
ntRegexp -> tOpen ntRegexp tClose { $$ = $2;}
