/*
    lexigen_table.cpp
    Generated by wbclex Scanner Generator (C) Phillip Voyle 2011 - 2021
*/

#include "lexigen_table.h"

const int CLexerTable::s_dataOffsets[CLexerTable::kStates] =
{
    0,  5, 11, 41, 46
};

const int CLexerTable::s_announceOnEOF[CLexerTable::kStates] =
{
   32, 37, 28, 42, 13
};

const int CLexerTable::s_announceData[CLexerTable::kInnerStates] =
{
   -1, 30, 30, 31, 29, -1, 34, 36, 35, 34, 33, -1, 14, 27, 27, 24, 
   27, 25, 26, 19, 20, 22, 18, 23, 21, 27, -1, -1, -1, -1, 16, -1, 
   17, -1, -1, -1, 15, -1, -1, -1, -1, 41, 38, 39, 40, 41, -1,  0, 
   12, 12,  1, 12, 12, 12,  3, 10,  8,  8,  8, 11,  1,  2,  1, -1, 
    9, -1, -1,  5,  8,  6,  8, -1,  7, -1, -1,  4
};

const bool CLexerTable::s_canEarlyAnnounce[CLexerTable::kInnerStates] = {
   false,
   false,
   true,
   true,
   true,
   false,
   false,
   true,
   true,
   false,
   true,
   false,
   true,
   false,
   true,
   true,
   false,
   true,
   true,
   true,
   true,
   true,
   true,
   true,
   true,
   false,
   false,
   false,
   false,
   false,
   true,
   false,
   true,
   false,
   false,
   false,
   true,
   false,
   false,
   false,
   false,
   false,
   true,
   true,
   true,
   false,
   false,
   false,
   false,
   true,
   false,
   false,
   false,
   false,
   true,
   true,
   false,
   false,
   false,
   true,
   false,
   true,
   false,
   false,
   true,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   true
};

bool CLexerTable::CanEarlyAnnounce(int state, int nInnerState)
{
   return s_canEarlyAnnounce[s_dataOffsets[state] + nInnerState];
}

int CLexerTable::GetAnnounce(int state, int nInnerState)
{
   return s_announceData[s_dataOffsets[state] + nInnerState];
}

int CLexerTable::GetAnnounceOnEOF(int state)
{
   return s_announceOnEOF[state];
}

int CLexerTable::GetTransition(int state, int nInnerState, char c)
{
   switch(s_dataOffsets[state]+ nInnerState)
   {
   case 0: //stComment + 0
      if ((c == '*')) return 1;
      if ((c == '\n')) return 3;
      return 2;
   case 1: //stComment + 1
      if ((c == '/')) return 4;
      return -1;
   case 2: //stComment + 2
      return -1;
   case 3: //stComment + 3
      return -1;
   case 4: //stComment + 4
      return -1;
   case 5: //stDef + 0
      if ((c == '\n')) return 3;
      if ((c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 1;
      return 2;
   case 6: //stDef + 1
      if ((c == '}')) return 5;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 4;
      return -1;
   case 7: //stDef + 2
      return -1;
   case 8: //stDef + 3
      return -1;
   case 9: //stDef + 4
      if ((c == '}')) return 5;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 4;
      return -1;
   case 10: //stDef + 5
      return -1;
   case 11: //stRegexp + 0
      if ((c == '%')) return 1;
      if ((c == '[')) return 2;
      if ((c == '\n')) return 4;
      if ((c == '"')) return 5;
      if ((c == '(')) return 6;
      if ((c == ')')) return 7;
      if ((c == '*')) return 8;
      if ((c == '+')) return 9;
      if ((c == '.')) return 10;
      if ((c == '?')) return 11;
      if ((c == '{')) return 12;
      if ((c == '|')) return 13;
      if ((c == '\\')) return 14;
      return 3;
   case 12: //stRegexp + 1
      return -1;
   case 13: //stRegexp + 2
      if ((c == '^')) return 16;
      if ((c == '\\')) return 17;
      if ((c == '-')
       || (c >= '[' && c <= ']')) return -1;
      return 15;
   case 14: //stRegexp + 3
      return -1;
   case 15: //stRegexp + 4
      return -1;
   case 16: //stRegexp + 5
      if ((c == '"')) return 19;
      if ((c == '\\')) return 20;
      return 18;
   case 17: //stRegexp + 6
      return -1;
   case 18: //stRegexp + 7
      return -1;
   case 19: //stRegexp + 8
      return -1;
   case 20: //stRegexp + 9
      return -1;
   case 21: //stRegexp + 10
      return -1;
   case 22: //stRegexp + 11
      return -1;
   case 23: //stRegexp + 12
      return -1;
   case 24: //stRegexp + 13
      return -1;
   case 25: //stRegexp + 14
      return 21;
   case 26: //stRegexp + 15
      if ((c == '\\')) return 23;
      if ((c == '-')) return 24;
      if ((c == ']')) return 25;
      if ((c >= '[' && c <= '^')) return -1;
      return 22;
   case 27: //stRegexp + 16
      if ((c == '\\')) return 17;
      if ((c == '-')
       || (c >= '[' && c <= '^')) return -1;
      return 15;
   case 28: //stRegexp + 17
      return 15;
   case 29: //stRegexp + 18
      if ((c == '"')) return 19;
      if ((c == '\\')) return 20;
      return 18;
   case 30: //stRegexp + 19
      return -1;
   case 31: //stRegexp + 20
      return 18;
   case 32: //stRegexp + 21
      return -1;
   case 33: //stRegexp + 22
      if ((c == '\\')) return 23;
      if ((c == ']')) return 25;
      if ((c == '-')) return 26;
      if ((c >= '[' && c <= '^')) return -1;
      return 22;
   case 34: //stRegexp + 23
      return 22;
   case 35: //stRegexp + 24
      if ((c == '\\')) return 28;
      if ((c == '-')
       || (c >= '[' && c <= '^')) return -1;
      return 27;
   case 36: //stRegexp + 25
      return -1;
   case 37: //stRegexp + 26
      if ((c == '\\')) return 29;
      if ((c == '-')
       || (c >= '[' && c <= '^')) return -1;
      return 27;
   case 38: //stRegexp + 27
      if ((c == '\\')) return 23;
      if ((c == ']')) return 25;
      if ((c == '-')
       || (c >= '[' && c <= '^')) return -1;
      return 22;
   case 39: //stRegexp + 28
      return 27;
   case 40: //stRegexp + 29
      return 27;
   case 41: //stResponse + 0
      if ((c == '}')) return 1;
      if ((c == '{')) return 2;
      if ((c == '\n')) return 3;
      return 4;
   case 42: //stResponse + 1
      return -1;
   case 43: //stResponse + 2
      return -1;
   case 44: //stResponse + 3
      return -1;
   case 45: //stResponse + 4
      if ((c == '\n')
       || (c == '{')
       || (c == '}')) return -1;
      return 4;
   case 46: //stStart + 0
      if ((c == '\n')) return 1;
      if ((c == '/')) return 2;
      if ((c == '"')) return 5;
      if ((c == '#')) return 6;
      if ((c == '$')) return 7;
      if ((c == '%')) return 8;
      if ((c == '=')) return 9;
      if ((c == 'O')) return 11;
      if ((c == 'e')) return 12;
      if ((c == '{')) return 13;
      if ((c == '\t')
       || (c == ' ')) return 4;
      if ((c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 10;
      return 3;
   case 47: //stStart + 1
      return -1;
   case 48: //stStart + 2
      if ((c == '/')) return 14;
      if ((c == '*')) return 15;
      return -1;
   case 49: //stStart + 3
      return -1;
   case 50: //stStart + 4
      if ((c == '\t')
       || (c == ' ')) return 16;
      return -1;
   case 51: //stStart + 5
      if ((c == '"')) return 18;
      if ((c == '\\')) return 19;
      return 17;
   case 52: //stStart + 6
      if ((c == 'S')) return 20;
      return -1;
   case 53: //stStart + 7
      if ((c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 54: //stStart + 8
      return -1;
   case 55: //stStart + 9
      return -1;
   case 56: //stStart + 10
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 22;
      return -1;
   case 57: //stStart + 11
      if ((c == 'N')) return 23;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 22;
      return -1;
   case 58: //stStart + 12
      if ((c == 'o')) return 24;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 22;
      return -1;
   case 59: //stStart + 13
      return -1;
   case 60: //stStart + 14
      if ((c == '\n')) return -1;
      return 14;
   case 61: //stStart + 15
      return -1;
   case 62: //stStart + 16
      if ((c == '\t')
       || (c == ' ')) return 16;
      return -1;
   case 63: //stStart + 17
      if ((c == '"')) return 18;
      if ((c == '\\')) return 19;
      return 17;
   case 64: //stStart + 18
      return -1;
   case 65: //stStart + 19
      return 17;
   case 66: //stStart + 20
      if ((c == 'T')) return 25;
      return -1;
   case 67: //stStart + 21
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 68: //stStart + 22
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 22;
      return -1;
   case 69: //stStart + 23
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 22;
      return -1;
   case 70: //stStart + 24
      if ((c == 'f')) return 26;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 22;
      return -1;
   case 71: //stStart + 25
      if ((c == 'A')) return 27;
      return -1;
   case 72: //stStart + 26
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 22;
      return -1;
   case 73: //stStart + 27
      if ((c == 'T')) return 28;
      return -1;
   case 74: //stStart + 28
      if ((c == 'E')) return 29;
      return -1;
   case 75: //stStart + 29
      return -1;
   }
}
