/*
    lexigen_table.cpp
    Generated by wbclex Scanner Generator (C) Phillip Voyle 2011 - 2021
*/

#include "lexigen_table.h"

const int CLexerTable::s_dataOffsets[CLexerTable::kStates] =
{
    0,  5, 14, 57
};

const int CLexerTable::s_announceOnEOF[CLexerTable::kStates] =
{
   33, 29, 17, 23
};

const int CLexerTable::s_announceData[CLexerTable::kInnerStates] =
{
   -1, 31, 31, 32, 30, -1, 24, 25, 27, 27, 28, -1, 26, -1, -1,  0, 
   16, 16,  2,  3,  4,  5, 16,  7, 15, 15, 15, 15, 15, 16, 16, 14, 
    0,  1,  6, 15, 15, 15, 15, 15, 12, -1, 13, -1, 15, 15, 15, 15, 
   15, 15,  9, 15,  8, 15, 10, 15, 11, -1, 18, 19, 21, 21, 22, -1, 
   20, -1
};

const bool CLexerTable::s_canEarlyAnnounce[CLexerTable::kInnerStates] = {
   false,
   false,
   true,
   true,
   true,
   false,
   true,
   true,
   false,
   true,
   true,
   false,
   true,
   false,
   false,
   false,
   false,
   true,
   true,
   true,
   true,
   true,
   false,
   true,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   true,
   false,
   true,
   true,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   true,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   false,
   true,
   true,
   false,
   true,
   true,
   false,
   true,
   false
};

bool CLexerTable::CanEarlyAnnounce(int state, int nInnerState)
{
   return s_canEarlyAnnounce[s_dataOffsets[state] + nInnerState];
}

int CLexerTable::GetAnnounce(int state, int nInnerState)
{
   return s_announceData[s_dataOffsets[state] + nInnerState];
}

int CLexerTable::GetAnnounceOnEOF(int state)
{
   return s_announceOnEOF[state];
}

int CLexerTable::GetTransition(int state, int nInnerState, char c)
{
   switch(s_dataOffsets[state]+ nInnerState)
   {
   case 0: //stComment + 0
      if ((c == '*')) return 1;
      if ((c == '\n')) return 3;
      return 2;
   case 1: //stComment + 1
      if ((c == '/')) return 4;
      return -1;
   case 2: //stComment + 2
      return -1;
   case 3: //stComment + 3
      return -1;
   case 4: //stComment + 4
      return -1;
   case 5: //stResponse + 0
      if ((c == '}')) return 1;
      if ((c == '{')) return 2;
      if ((c == '"')) return 3;
      if ((c == '\n')) return 5;
      return 4;
   case 6: //stResponse + 1
      return -1;
   case 7: //stResponse + 2
      return -1;
   case 8: //stResponse + 3
      if ((c == '"')) return 7;
      if ((c == '\\')) return 8;
      return 6;
   case 9: //stResponse + 4
      return -1;
   case 10: //stResponse + 5
      return -1;
   case 11: //stResponse + 6
      if ((c == '"')) return 7;
      if ((c == '\\')) return 8;
      return 6;
   case 12: //stResponse + 7
      return -1;
   case 13: //stResponse + 8
      return 6;
   case 14: //stStart + 0
      if ((c == ',')) return 9;
      if ((c == '{')) return 17;
      if ((c == '"')) return 16;
      if ((c == '$')) return 15;
      if ((c == 'r')) return 14;
      if ((c == 'l')) return 13;
      if ((c == 'n')) return 12;
      if ((c == 't')) return 10;
      if ((c == '-')) return 8;
      if ((c == '<')) return 7;
      if ((c == ';')) return 6;
      if ((c == '=')) return 5;
      if ((c == '\n')) return 4;
      if ((c == '/')) return 2;
      if ((c == '\t')
       || (c == ' ')) return 1;
      if ((c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 11;
      return 3;
   case 15: //stStart + 1
      if ((c == '\t')
       || (c == ' ')) return 18;
      return -1;
   case 16: //stStart + 2
      if ((c == '*')) return 19;
      return -1;
   case 17: //stStart + 3
      return -1;
   case 18: //stStart + 4
      return -1;
   case 19: //stStart + 5
      return -1;
   case 20: //stStart + 6
      return -1;
   case 21: //stStart + 7
      return -1;
   case 22: //stStart + 8
      if ((c == '>')) return 20;
      return -1;
   case 23: //stStart + 9
      return -1;
   case 24: //stStart + 10
      if ((c == 'o')) return 22;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 25: //stStart + 11
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 26: //stStart + 12
      if ((c == 'o')) return 23;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 27: //stStart + 13
      if ((c == 'e')) return 24;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 28: //stStart + 14
      if ((c == 'i')) return 25;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 29: //stStart + 15
      if ((c >= 'A' && c <= 'Z')
       || (c >= 'a' && c <= 'z')) return 26;
      return -1;
   case 30: //stStart + 16
      if ((c == '"')) return 28;
      if ((c == '\\')) return 29;
      return 27;
   case 31: //stStart + 17
      return -1;
   case 32: //stStart + 18
      if ((c == '\t')
       || (c == ' ')) return 18;
      return -1;
   case 33: //stStart + 19
      return -1;
   case 34: //stStart + 20
      return -1;
   case 35: //stStart + 21
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 36: //stStart + 22
      if ((c == 'k')) return 30;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 37: //stStart + 23
      if ((c == 'a')) return 31;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'b' && c <= 'z')) return 21;
      return -1;
   case 38: //stStart + 24
      if ((c == 'f')) return 32;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 39: //stStart + 25
      if ((c == 'g')) return 33;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 40: //stStart + 26
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 26;
      return -1;
   case 41: //stStart + 27
      if ((c == '"')) return 28;
      if ((c == '\\')) return 29;
      return 27;
   case 42: //stStart + 28
      return -1;
   case 43: //stStart + 29
      return 27;
   case 44: //stStart + 30
      if ((c == 'e')) return 34;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 45: //stStart + 31
      if ((c == 's')) return 35;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 46: //stStart + 32
      if ((c == 't')) return 36;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 47: //stStart + 33
      if ((c == 'h')) return 37;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 48: //stStart + 34
      if ((c == 'n')) return 38;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 49: //stStart + 35
      if ((c == 's')) return 39;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 50: //stStart + 36
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 51: //stStart + 37
      if ((c == 't')) return 40;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 52: //stStart + 38
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 53: //stStart + 39
      if ((c == 'o')) return 41;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 54: //stStart + 40
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 55: //stStart + 41
      if ((c == 'c')) return 42;
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 56: //stStart + 42
      if ((c >= '0' && c <= '9')
       || (c >= 'A' && c <= 'Z')
       || (c == '_')
       || (c >= 'a' && c <= 'z')) return 21;
      return -1;
   case 57: //stType + 0
      if ((c == '>')) return 1;
      if ((c == '<')) return 2;
      if ((c == '"')) return 3;
      if ((c == '\n')) return 5;
      return 4;
   case 58: //stType + 1
      return -1;
   case 59: //stType + 2
      return -1;
   case 60: //stType + 3
      if ((c == '"')) return 7;
      if ((c == '\\')) return 8;
      return 6;
   case 61: //stType + 4
      return -1;
   case 62: //stType + 5
      return -1;
   case 63: //stType + 6
      if ((c == '"')) return 7;
      if ((c == '\\')) return 8;
      return 6;
   case 64: //stType + 7
      return -1;
   case 65: //stType + 8
      return 6;
   }
}
